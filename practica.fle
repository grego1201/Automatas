%%

%class practica
%standalone
%8bit

%{
  public int cont;
%}

%init{
	cont=0;
%init}

%eof{
	System.out.println("Naturales = "+cont);
%eof}


/* Macros */

variable = [a-z]([a-z]|[A-Z]|[0-9]|[_])*
entero = [+|-]?[0-9]+
boolean = true|false
expresion = ([+|-]?([+|-]{2}{variable}|{variable}|{entero}|{variable}[+|-]{2}))+

%%
// Bucle while
while {System.out.println("Bucle while: " + yytext());}


//Entero
{entero} {System.out.println("Entero: " + yytext()); }

//Boolean
{boolean} {System.out.println("Boolean: "+yytext());}

//expreArimetica
//[+|-|*|/] {System.out.println("Expresion aritmetica" + yytext());}
"+" {System.out.println("Expresion aritmetica sumar");}
"-" {System.out.println("Expresion aritmetica restar");}
"*" {System.out.println("Expresion aritmetica multiplicar");}
"/" {System.out.println("Expresion aritmetica dividir");}

//expreRelacional
"<" {System.out.println("Expresion relacional menor que");}
"<=" {System.out.println("Expresion relacional menor igual que");}
">" {System.out.println("Expresion relacional mayor que");}
">=" {System.out.println("Expresion relacional mayor igual que");}
"==" {System.out.println("Expresion relacional igual que");}
"!=" {System.out.println("Expresion relacional distinto que");}

//expreLogica
"&&" {System.out.println("Expresion logica and");}
"||" {System.out.println("Expresion logica or");}
"!" {System.out.println("Expresion logica not");}

//simbolos
";" {System.out.println("simbolo puntoComa");}
":" {System.out.println("simbolo dosPuntos");}
"(" {System.out.println("simbolo parentesisApertura");}
")" {System.out.println("simbolo parentesisCierre");}
"{" {System.out.println("simbolo llaveApertura");}
"}" {System.out.println("simbolo llaveCierre");}
"[" {System.out.println("simbolo corcheteApertura");}
"]" {System.out.println("simbolo corcheteCierre");}
"?" {System.out.println("simbolo interrogacion");}


//cabecera reconoce "public static"
public[" "]+static {System.out.println("Cabecera metodo");}

//Variable
{variable} {System.out.println("Variable: " + yytext());}

//Return coge la cadena "return "
return[" "]+ {System.out.println("Return");}

//Asignacion
{variable}\[++] {System.out.println("Post-Incremento");}
{variable}\[--] {System.out.println("Post-Decremento");}
[++]\{variable} {System.out.println("Pre-Incremento");}
[--]\{variable} {System.out.println("Pre-Decremento");}
{variable}[" "]*[=][" "]*{expresion} {System.out.println("Asignacion expresion: " + yytext());}



//Expresion aritmetica
{expresion} {System.out.println("Expresion aritmetica: "+yytext());}





//pruebas
//^[a-z]([a-z]|[A-Z]|[0-9]|[_])* {System.out.println(yytext());}
//[A|a]* {System.out.println(yytext());}


/*

---------- PENDIENTE -----------

//Asignacion
  metodo

//Bucles
  while

//Llamada metodo

"(\)" {System.out.println("simbolo backslash");}

*/






//[<|</=|>|>/=|=/=|!/=] {System.out.println("Expresion relacional"+ yytext());}
//[&/&||/||!] {System.out.println("Expresion logica"+ yytext());}
.   {}
